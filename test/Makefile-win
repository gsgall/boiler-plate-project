CXX = g++
CXXFLAGS = /std:c++20 /Wall /Werror /Zi /MD /EHsc

PROJECT_NAME = boiler-plate-project
PROJECT_SRC_DIR = ..\src
PROJECT_INCLUDE_DIR = ..\include\$(PROJECT_NAME)

HELPER_SRC_DIR = helpers\src
HELPER_INCLUDE_DIR = helpers\include

TEST_SRC_DIR = tests
TEST_BUILD_DIR = build
TEST_EXECUTABLE = run_tests.exe

CONDA_LIB_DIR = $(CONDA_PREFIX)\lib
CONDA_INCLUDE_DIR = $(CONDA_PREFIX)\include

GTEST_LIBS = gtest.lib gtest_main.lib
TEST_LINKS = $(GTEST_LIBS)

PROJECT_SOURCES := $(wildcard $(PROJECT_SRC_DIR)\*.cpp)
PROJECT_OBJECTS := $(patsubst $(PROJECT_SRC_DIR)\%.cpp, $(TEST_BUILD_DIR)\%.o, $(PROJECT_SOURCES))

HELPER_SOURCES := $(wildcard $(HELPER_SRC_DIR)\*.cpp)
HELPER_OBJECTS := $(patsubst $(HELPER_SRC_DIR)\%.cpp, $(TEST_BUILD_DIR)\%.o, $(HELPER_SOURCES))

TEST_SOURCES := $(wildcard $(TEST_SRC_DIR)\*.cpp)
TEST_OBJECTS := $(patsubst $(TEST_SRC_DIR)\%.cpp, $(TEST_BUILD_DIR)\%.o, $(TEST_SOURCES))

HELPER_INCLUDE := helpers\include
PROJECT_INCLUDE := ..\include

$(TEST_BUILD_DIR)\%.o: $(PROJECT_SRC_DIR)\%.cpp
    mkdir $(TEST_BUILD_DIR) 2>nul
    $(CXX) $(CXXFLAGS) /I$(CONDA_INCLUDE_DIR) /I$(PROJECT_INCLUDE_DIR) /c $< /Fo$@

$(TEST_BUILD_DIR)\%.o: $(HELPER_SRC_DIR)\%.cpp
    mkdir $(TEST_BUILD_DIR) 2>nul
    $(CXX) $(CXXFLAGS) /I$(HELPER_INCLUDE) /I$(CONDA_INCLUDE_DIR) /I$(PROJECT_INCLUDE_DIR) /c $< /Fo$@

$(TEST_BUILD_DIR)\%.o: $(TEST_SRC_DIR)\%.cpp
    mkdir $(TEST_BUILD_DIR) 2>nul
    $(CXX) $(CXXFLAGS) /I$(PROJECT_INCLUDE) /I$(HELPER_INCLUDE) /I$(CONDA_INCLUDE_DIR) /c $< /Fo$@

$(TEST_EXECUTABLE): $(TEST_OBJECTS) $(PROJECT_OBJECTS) $(HELPER_OBJECTS)
    mkdir output 2>nul
    $(CXX) $(CXXFLAGS) /I$(PROJECT_INCLUDE) /I$(HELPER_INCLUDE) /I$(CONDA_INCLUDE_DIR) /link /LIBPATH:$(CONDA_LIB_DIR) /out:$@ $^ $(TEST_LINKS)

.PHONY: all clean coverage clean-coverage

all: $(TEST_EXECUTABLE)

clean:
    del /Q $(TEST_BUILD_DIR)\*.o
    del /Q $(TEST_EXECUTABLE)
    del /Q $(PROJECT_BUILD_DIR)\*.o
    rmdir /Q /S coverage_report 2>nul
    del /Q $(TEST_BUILD_DIR)\*.g*
    rmdir /Q /S *.dSYM 2>nul
    del /Q *.out

coverage: all
    lcov --capture --directory . --output-file coverage.info
    lcov --remove coverage.info "*/include/*" -o coverage.info
    lcov --remove coverage.info "*/gtest/*" -o coverage.info
    lcov --remove coverage.info "*/v1/*" -o coverage.info
    lcov --remove coverage.info "*/test/*" -o coverage.info
    lcov --remove coverage.info "*/yaml-cpp/*" -o coverage.info
    lcov --remove coverage.info "*/fmt/*" -o coverage.info
    genhtml coverage.info --output-directory coverage_report
    start coverage_report\index.html

clean-coverage:
    del /Q coverage.info
